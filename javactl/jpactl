#!/bin/bash

shopt -s nullglob

JUNIT="/usr/share/java/junit-4.12.jar"
HAMCREST="/usr/share/java/hamcrest/core-1.3.jar"
RUNCLASS="org.junit.runner.JUnitCore"

SOURCE="src"
CLASSES="classes"
DOCS="docs"

program=$(basename "$0")
action="$1"

# throw away action from command line arguments
shift

usage() {
        printf "\nUsage: $program command [target]\n\n"
        printf "$program must be run in the project root directory\n\n"
        printf '%-10s%-25s%-25s \n' "help" "" "display this message"
        printf '%-10s%-25s%-25s \n' "compile" "package name" "compile all classes in package"
        printf '%-10s%-25s%-25s \n' "tests" "package name" "run all tests in package"
        printf '%-10s%-25s%-25s \n' "docs" "package name" "make javadoc for package"
}


error_exit() {
        echo "Unrecognised command: '$action'"
        usage
        exit 1
}


compile() {
        javac -d $CLASSES -classpath $SOURCE:$JUNIT $SOURCE/"$1"/*.java
}


testing() {
        java -classpath $CLASSES:$JUNIT:$HAMCREST "$RUNCLASS" "$1.$2"
}


tests() {
        for file in $CLASSES/$1/*
        do
                if [[ $file =~ Test.class ]]; then
                        file=${file##*/}
                        testing "$1" ${file%.*}
                fi
        done
}


docs() {
        files=($SOURCE/$1/*)

        # remove all test files
        for index in "${!files[@]}"
        do
                if [[ ${files[$index]} =~ Test.java ]]; then
                        unset -v 'files[$index]'
                        echo ${files[@]}
                fi
        done

        # make docs for package
        javadoc -d $DOCS -html5 "${files[@]}"
}


case "$action" in
        compile)
                compile "$1"
                ;;
        tests)
                tests "$1"
                ;;
        docs)
                docs "$1"
                ;;
        help)
                usage
                ;;
        *)
                error_exit
                ;;
esac
