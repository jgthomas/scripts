#!/bin/bash

# Assign script name
PROGRAM=$(basename $0)

# Assign colours and formatting
BOLD=$(tput bold)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NORMAL=$(tput sgr0)

RUN_COMMANDS=true

OK="OK"
PROBLEM="PROBLEM"


test_success() {
        "$1" > /dev/null 2>&1
        code=$?
}


print_ok() {
        printf '%s\n' "${GREEN}$OK${NORMAL}"
}


print_problem() {
        printf '%s\n' "${RED}$PROBLEM${NORMAL}"
}


output_status() {
        local exit_code=$1
        local good_code=$2
        shift 2
        local command=$@

        if [[ $exit_code -eq $good_code ]]; then
                print_ok
        else
                print_problem
                if [[ $RUN_COMMANDS = true ]]; then $command; fi
        fi
}


check_syshealth() {
        [[ "$1" == "quiet" ]] && RUN_COMMANDS=false || RUN_COMMANDS=true

        printf '\n%s\n\n' "Running system health check..."
        failed_unit_check
        foreign_packages_check
        unrequired_dependencies_check
        pacsave_files_check
}


failed_unit_check() {
        printf '%s' "Failed unit files: "
        local command="systemctl --failed"
        local good_code=0
        local exit_code
        $command > /dev/null 2>&1
        exit_code=$?
        output_status $exit_code $good_code $command
}


foreign_packages_check() {
        printf '%s' "Foreign packages: "
        local command="pacman -Qm"
        local good_code=1
        local exit_code
        $command > /dev/null 2>&1
        exit_code=$?
        output_status $exit_code $good_code $command
}


unrequired_dependencies_check() {
        printf '%s' "Unrequired dependencies: "
        local command="pacman -Qttd"
        local good_code=1
        local exit_code
        $command > /dev/null 2>&1
        exit_code=$?
        output_status $exit_code $good_code $command
}


pacsave_files_check() {
        printf '%s' "Unhandled pacsave files: "
        local command="locate *.pacsave"
        local good_code=1
        local exit_code
        $command > /dev/null 2>&1
        exit_code=$?
        output_status $exit_code $good_code $command
}

check_syshealth $@


