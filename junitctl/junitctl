#!/bin/bash
#
# Script assumes the classes to be tested and the junit tests
# are all in the same directory
#

program=$(basename "$0")

action="$1"
sourcefile="${2%.*}.java"
classfile="${2%.*}.class"
testclass="${2%.*}"

junit="/usr/share/java/junit-4.12.jar"
hamcrest="/usr/share/java/hamcrest/core-1.3.jar"
runclass="org.junit.runner.JUnitCore"

compiled='*.class *.jar'


usage() {
        printf "\nUsage: $program command [target]\n\n"
        printf '%-10s%-25s%-25s \n' "help" "" "display this message"
        printf '%-10s%-25s%-25s \n' "clean" "" "delete all compiled files"
        printf '%-10s%-25s%-25s \n' "compile" "TestClassName.java" "compile the tests"
        printf '%-10s%-25s%-25s \n' "run" "TestClassName" "run the tests"
        printf '%-10s%-25s%-25s \n' "full" "TestClassName.java" "compile and run the tests"
}


clean() {
        for file in $compiled
        do
                rm -f "$file"
        done
}


compile() {
        if [[ -f "$sourcefile" ]]; then
                javac -classpath "$(pwd)":"$junit" "$sourcefile"
        else
                echo "File '$1' not found"
        fi
}


run() {
        if [[ -f "$classfile" ]]; then
                java -classpath "$(pwd)":"$junit":"$hamcrest" "$runclass" "$testclass"
        else
                echo "junit tests '$testclass' not found"
        fi
}


error_exit() {
        echo "Unrecognised command: '$action'"
        usage
        exit 1
}


case "$action" in
        compile)
                clean && compile
                ;;
        run)
                run
                ;;
        full)
                clean && compile && run
                ;;
        clean)
                clean
                ;;
        help)
                usage
                ;;
        *)
                error_exit
                ;;
esac
